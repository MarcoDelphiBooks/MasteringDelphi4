<HTML><HEAD>
<TITLE>Project: LISTCLI.DPR</TITLE>
<META NAME="GENERATOR" CONTENT="PasToHTML[Marco Cantù]">
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<CENTER><I>Marco Cant&ugrave; 1998, Mastering Delphi 4</I></CENTER>
<H1><CENTER>Project: LISTCLI.DPR</CENTER></H1><HR>
<H3>Project Structure</H3><UL>
<LI> <A HREF=#LISTCLI.DPR> LISTCLI.DPR</A>
<LI> <A HREF=#LCLIFORM.PAS> LCLIFORM.PAS</A>
<LI> <A HREF=#IMPORTTLB.PAS> IMPORTTLB.PAS</A>
<LI> <A HREF=#LCLIFORM.DFM> LCLIFORM.DFM</A>
</UL>
<HR>
<A NAME=LISTCLI.DPR><H3>LISTCLI.DPR</H3></A>

<PRE>
<B>program</B> ListCli;

<B>uses</B>
  Forms,
  LCliForm <B>in</B> <I>'LCliForm.pas'</I> <FONT COLOR="#000080"><I>{ListCliForm}</I></FONT>,
  ImportTlb <B>in</B> <I>'ImportTlb.pas'</I>;

<FONT COLOR="#000080"><I>{$R *.RES}</I></FONT>

<B>begin</B>
  Application.Initialize;
  Application.CreateForm(TListCliForm, ListCliForm);
  Application.Run;
<B>end</B>.</PRE>
<HR>

<A NAME=LCLIFORM.PAS><H3>LCLIFORM.PAS</H3></A>

<PRE>
<B>unit</B> LCliForm;

<B>interface</B>

<B>uses</B>
  Windows, Messages, SysUtils, Classes, Graphics, Controls,
  Forms, Dialogs, ImportTlb, StdCtrls;

<B>type</B>
  TListCliForm = <B>class</B>(TForm)
    btnFont: TButton;
    FontDialog1: TFontDialog;
    btnMemList: TButton;
    EditItem: TEdit;
    btnMemoTo: TButton;
    Memo1: TMemo;
    btnAdd: TButton;
    btnServer: TButton;
    <B>procedure</B> btnFontClick(Sender: TObject);
    <B>procedure</B> btnMemListClick(Sender: TObject);
    <B>procedure</B> btnMemoToClick(Sender: TObject);
    <B>procedure</B> btnAddClick(Sender: TObject);
    <B>procedure</B> btnServerClick(Sender: TObject);
  <B>private</B>
    fInternalListServ: IListServer;
    <B>function</B> GetListSrv: IListServer;
  <B>public</B>
    <B>property</B> ListSrv: IListServer
      <B>read</B> GetListSrv;
  <B>end</B>;

<B>var</B>
  ListCliForm: TListCliForm;

<B>implementation</B>

<FONT COLOR="#000080"><I>{$R *.DFM}</I></FONT>

<B>uses</B>
  ActiveX, AxCtrls, StdVCL;

<B>procedure</B> TListCliForm.btnFontClick(Sender: TObject);
<B>var</B>
  NewFont: IFontDisp;
<B>begin</B>
  <FONT COLOR="#000080"><I>// select a font and apply it</I></FONT>
  <B>if</B> FontDialog1.Execute <B>then</B>
  <B>begin</B>
    GetOleFont (FontDialog1.Font, NewFont);
    ListSrv.Font := NewFont;
  <B>end</B>;
<B>end</B>;

<B>procedure</B> TListCliForm.btnMemListClick(Sender: TObject);
<B>var</B>
  TempIStrs: IStrings;
  List: TStrings;
  I: Integer;
<B>begin</B>
  <FONT COLOR="#000080"><I>// set a list of strings...</I></FONT>
  List := TStringList.Create;
  <B>try</B>
    <B>for</B> I := 1 <B>to</B> 10 <B>do</B>
      List.Add (<I>'Item '</I> + IntToStr (I));
    GetOleStrings (List, TempIStrs);
    ListSrv.Items := TempIStrs;
  <B>finally</B>
    List.Free;
  <B>end</B>;
<B>end</B>;

<B>procedure</B> TListCliForm.btnMemoToClick(Sender: TObject);
<B>var</B>
  TempIStrs: IStrings;
<B>begin</B>
  GetOleStrings (Memo1.Lines, TempIStrs);
  ListSrv.Items := TempIStrs;
<B>end</B>;

<B>procedure</B> TListCliForm.btnAddClick(Sender: TObject);
<B>var</B>
  TempIStrs: IStrings;
  List: TStrings;
<B>begin</B>
  <FONT COLOR="#000080"><I>// create a temporary list of strings</I></FONT>
  List := TStringList.Create;
  <B>try</B>
    <FONT COLOR="#000080"><I>// get items from server</I></FONT>
    TempIStrs := ListSrv.Items;
    <FONT COLOR="#000080"><I>// add new item</I></FONT>
    TempIStrs.Add (EditItem.Text);
    <FONT COLOR="#000080"><I>// make local copy</I></FONT>
    SetOleStrings (List, TempIStrs);
    <FONT COLOR="#000080"><I>// copy back to interface</I></FONT>
    GetOleStrings (List, TempIStrs);
    <FONT COLOR="#000080"><I>// send to server</I></FONT>
    ListSrv.Items := TempIStrs;
  <B>finally</B>
    List.Free;
  <B>end</B>;
<B>end</B>;

<B>procedure</B> TListCliForm.btnServerClick(Sender: TObject);
<B>var</B>
  TempIStrs: IStrings;
<B>begin</B>
  <FONT COLOR="#000080"><I>// get the interface and move strings to memo</I></FONT>
  TempIStrs := ListSrv.Items;
  SetOleStrings (Memo1.Lines, TempIStrs);
<B>end</B>;

<B>function</B> TListCliForm.GetListSrv: IListServer;
<B>begin</B>
  <FONT COLOR="#000080"><I>// eventually create the server</I></FONT>
  <B>if</B> <B>not</B> Assigned (fInternalListServ) <B>then</B>
    fInternalListServ := CoListServer.Create;
  Result := fInternalListServ;
<B>end</B>;

<B>end</B>.</PRE>
<HR>

<A NAME=IMPORTTLB.PAS><H3>IMPORTTLB.PAS</H3></A>

<PRE>
<B>unit</B> ImportTlb;

<FONT COLOR="#000080"><I>// ************************************************************************ //</I></FONT>
<FONT COLOR="#000080"><I>// WARNING                                                                  //</I></FONT>
<FONT COLOR="#000080"><I>// -------                                                                  //</I></FONT>
<FONT COLOR="#000080"><I>// The types declared in this file were generated from data read from a     //</I></FONT>
<FONT COLOR="#000080"><I>// Type Library. If this type library is explicitly or indirectly (via      //</I></FONT>
<FONT COLOR="#000080"><I>// another type library referring to this type library) re-imported, or the //</I></FONT>
<FONT COLOR="#000080"><I>// 'Refresh' command of the Type Library Editor activated while editing the //</I></FONT>
<FONT COLOR="#000080"><I>// Type Library, the contents of this file will be regenerated and all      //</I></FONT>
<FONT COLOR="#000080"><I>// manual modifications will be lost.                                       //</I></FONT>
<FONT COLOR="#000080"><I>// ************************************************************************ //</I></FONT>

<FONT COLOR="#000080"><I>// *********************************************************************//</I></FONT>
<FONT COLOR="#000080"><I>// HelpString: Project1 Library</I></FONT>
<FONT COLOR="#000080"><I>// Version:    1.0</I></FONT>
<FONT COLOR="#000080"><I>// *********************************************************************//</I></FONT>

<B>interface</B>

<B>uses</B> Windows, ActiveX, Classes, Graphics, OleCtrls, StdVCL;

<FONT COLOR="#000080"><I>// *********************************************************************//</I></FONT>
<FONT COLOR="#000080"><I>// GUIDS declared in the TypeLibrary. Following prefixes are used:      //</I></FONT>
<FONT COLOR="#000080"><I>//   Type Libraries     : LIBID_xxxx                                    //</I></FONT>
<FONT COLOR="#000080"><I>//   CoClasses          : CLSID_xxxx                                    //</I></FONT>
<FONT COLOR="#000080"><I>//   DISPInterfaces     : DIID_xxxx                                     //</I></FONT>
<FONT COLOR="#000080"><I>//   Non-DISP interfaces: IID_xxxx                                      //</I></FONT>
<FONT COLOR="#000080"><I>// *********************************************************************//</I></FONT>
<B>const</B>
  LIBID_ListServ: TGUID = <I>'{323C4A83-E400-11D1-B9F1-004845400FAA}'</I>;
  IID_IListServer: TGUID = <I>'{323C4A84-E400-11D1-B9F1-004845400FAA}'</I>;
  CLASS_ListServer: TGUID = <I>'{323C4A86-E400-11D1-B9F1-004845400FAA}'</I>;

<FONT COLOR="#000080"><I>// *********************************************************************//</I></FONT>
<FONT COLOR="#000080"><I>// Forward declaration of interfaces defined in Type Library            //</I></FONT>
<FONT COLOR="#000080"><I>// *********************************************************************//</I></FONT>
<B>type</B>
  IListServer = <B>interface</B>;
  IListServerDisp = <B>dispinterface</B>;

<FONT COLOR="#000080"><I>// *********************************************************************//</I></FONT>
<FONT COLOR="#000080"><I>// Declaration of CoClasses defined in Type Library                     //</I></FONT>
<FONT COLOR="#000080"><I>// (NOTE: Here we map each CoClass to it's Default Interface            //</I></FONT>
<FONT COLOR="#000080"><I>// *********************************************************************//</I></FONT>
  ListServer = IListServer;

  IListServer = <B>interface</B>(IDispatch)
    [<I>'{323C4A84-E400-11D1-B9F1-004845400FAA}'</I>]
    <B>function</B> Get_Items: IStrings; safecall;
    <B>procedure</B> Set_Items(<B>const</B> Value: IStrings); safecall;
    <B>function</B> Get_Font: IFontDisp; safecall;
    <B>procedure</B> Set_Font(<B>const</B> Value: IFontDisp); safecall;
    <B>property</B> Items: IStrings <B>read</B> Get_Items <B>write</B> Set_Items;
    <B>property</B> Font: IFontDisp <B>read</B> Get_Font <B>write</B> Set_Font;
  <B>end</B>;

<FONT COLOR="#000080"><I>// Dispinterface declaration for dual interface IListServer</I></FONT>

  IListServerDisp = <B>dispinterface</B>
    [<I>'{323C4A84-E400-11D1-B9F1-004845400FAA}'</I>]
    <B>property</B> Items: IStrings <B>dispid</B> 1;
    <B>property</B> Font: IFontDisp <B>dispid</B> 2;
  <B>end</B>;

  CoListServer = <B>class</B>
    <B>class</B> <B>function</B> Create: IListServer;
    <B>class</B> <B>function</B> CreateRemote(<B>const</B> MachineName: <B>string</B>): IListServer;
  <B>end</B>;

<B>implementation</B>

<B>uses</B> ComObj;

<B>class</B> <B>function</B> CoListServer.Create: IListServer;
<B>begin</B>
  Result := CreateComObject(CLASS_ListServer) <B>as</B> IListServer;
<B>end</B>;

<B>class</B> <B>function</B> CoListServer.CreateRemote(<B>const</B> MachineName: <B>string</B>): IListServer;
<B>begin</B>
  Result := CreateRemoteComObject(MachineName, CLASS_ListServer) <B>as</B> IListServer;
<B>end</B>;

<B>end</B>.</PRE>
<HR>

<A NAME=LCLIFORM.DFM><H3>LCLIFORM.DFM</H3></A>

<PRE>
<B>object</B> ListCliForm: TListCliForm
  Left = 198
  Top = 105
  Width = 385
  Height = 248
  Caption = <I>'List Client'</I>
  Color = clBtnFace
  Font.Charset = DEFAULT_CHARSET
  Font.Color = clWindowText
  Font.Height = -11
  Font.Name = <I>'MS Sans Serif'</I>
  Font.Style = []
  OldCreateOrder = True
  PixelsPerInch = 96
  TextHeight = 13
  <B>object</B> btnFont: TButton
    Left = 192
    Top = 144
    Width = 121
    Height = 25
    Caption = <I>'Change Font'</I>
    TabOrder = 0
    OnClick = btnFontClick
  <B>end</B>
  <B>object</B> btnMemList: TButton
    Left = 192
    Top = 48
    Width = 121
    Height = 25
    Caption = <I>'Memory -&gt; Server'</I>
    TabOrder = 1
    OnClick = btnMemListClick
  <B>end</B>
  <B>object</B> EditItem: TEdit
    Left = 208
    Top = 112
    Width = 145
    Height = 21
    TabOrder = 2
    Text = <I>'New item'</I>
  <B>end</B>
  <B>object</B> btnMemoTo: TButton
    Left = 192
    Top = 16
    Width = 121
    Height = 25
    Caption = <I>'Memo -&gt; Server'</I>
    TabOrder = 3
    OnClick = btnMemoToClick
  <B>end</B>
  <B>object</B> Memo1: TMemo
    Left = 16
    Top = 16
    Width = 161
    Height = 185
    Lines.Strings = (
      <I>'aaaaaaaa'</I>
      <I>'bbbbbbbb'</I>
      <I>'cccccccc'</I>
      <I>'dddddddd'</I>
      <I>'eeeeeeee'</I>)
    TabOrder = 4
  <B>end</B>
  <B>object</B> btnAdd: TButton
    Left = 192
    Top = 80
    Width = 121
    Height = 25
    Caption = <I>'Add to Server'</I>
    TabOrder = 5
    OnClick = btnAddClick
  <B>end</B>
  <B>object</B> btnServer: TButton
    Left = 192
    Top = 176
    Width = 121
    Height = 25
    Caption = <I>'Memo &lt;- Server'</I>
    TabOrder = 6
    OnClick = btnServerClick
  <B>end</B>
  <B>object</B> FontDialog1: TFontDialog
    Font.Charset = DEFAULT_CHARSET
    Font.Color = clWindowText
    Font.Height = -11
    Font.Name = <I>'MS Sans Serif'</I>
    Font.Style = []
    MinFontSize = 0
    MaxFontSize = 0
    Left = 64
    Top = 80
  <B>end</B>
<B>end</B></PRE>
<HR>

<BR><I><CENTER>Copyright Marco Cant&ugrave; 1998</CENTER></I>
</BODY> </HTML>