<HTML><HEAD>
<TITLE>Project: EXCEP.DPR</TITLE>
<META NAME="GENERATOR" CONTENT="PasToHTML[Marco Cantù]">
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<CENTER><I>Marco Cant&ugrave; 1998, Mastering Delphi 4</I></CENTER>
<H1><CENTER>Project: EXCEP.DPR</CENTER></H1><HR>
<H3>Project Structure</H3><UL>
<LI> <A HREF=#EXCEP.DPR> EXCEP.DPR</A>
<LI> <A HREF=#EXCEPF.PAS> EXCEPF.PAS</A>
<LI> <A HREF=#EXCEPF.DFM> EXCEPF.DFM</A>
</UL>
<HR>
<A NAME=EXCEP.DPR><H3>EXCEP.DPR</H3></A>

<PRE>
<B>program</B> Excep;

<B>uses</B>
  Forms,
  ExcepF <B>in</B> <I>'ExcepF.pas'</I> <FONT COLOR="#000080"><I>{Form1}</I></FONT>;

<FONT COLOR="#000080"><I>{$R *.RES}</I></FONT>

<B>begin</B>
  Application.CreateForm(TForm1, Form1);
  Application.Run;
<B>end</B>.</PRE>
<HR>

<A NAME=EXCEPF.PAS><H3>EXCEPF.PAS</H3></A>

<PRE>
<B>unit</B> ExcepF;

<B>interface</B>

<B>uses</B> SysUtils, Windows, Messages, Classes, Graphics, Controls,
  Forms, Dialogs, StdCtrls;
<B>type</B>
  TForm1 = <B>class</B>(TForm)
    ButtonDivide1: TButton;
    ButtonDivide2: TButton;
    ButtonRaise1: TButton;
    ButtonRaise2: TButton;
    Label1: TLabel;
    Label2: TLabel;
    <B>procedure</B> ButtonDivide1Click(Sender: TObject);
    <B>procedure</B> ButtonDivide2Click(Sender: TObject);
    <B>procedure</B> ButtonRaise1Click(Sender: TObject);
    <B>procedure</B> ButtonRaise2Click(Sender: TObject);
  <B>private</B>
    <FONT COLOR="#000080"><I>{ Private declarations }</I></FONT>
  <B>public</B>
    <FONT COLOR="#000080"><I>{ Public declarations }</I></FONT>
  <B>end</B>;

<B>var</B>
  Form1: TForm1;

<B>implementation</B>

<FONT COLOR="#000080"><I>{$R *.DFM}</I></FONT>

<FONT COLOR="#000080"><I>{new type of exception}</I></FONT>
<B>type</B>
  EArrayFull = <B>class</B> (Exception);

<FONT COLOR="#000080"><I>{protected version of the div operator}</I></FONT>
<B>function</B> Divide (A, B: Integer): Integer;
<B>begin</B>
  <B>try</B>
    <FONT COLOR="#000080"><I>{the following stetement is protected because it
      can generate an error if B equals 0}</I></FONT>
    Result := A <B>div</B> B;
  <B>except</B>
    <B>on</B> EDivByZero <B>do</B>
    <B>begin</B>
      Result := 0;
      MessageDlg (<I>'Divide by zero corrected'</I>, mtError, [mbOK], 0);
    <B>end</B>;
    <B>on</B> E: Exception <B>do</B>
    <B>begin</B>
      Result := 0;
      MessageDlg (E.<B>Message</B>, mtError, [mbOK], 0);
    <B>end</B>;
  <B>end</B>;
<B>end</B>;

<FONT COLOR="#000080"><I>{fake procedure: the array is always full}</I></FONT>
<B>procedure</B> AddToArray (N: Integer);
<B>begin</B>
  <B>raise</B> EArrayFull.Create (<I>'Array full'</I>);
<B>end</B>;

<B>procedure</B> TForm1.ButtonDivide1Click(Sender: TObject);
<B>begin</B>
  Divide (10, 0);
<B>end</B>;

<B>procedure</B> TForm1.ButtonDivide2Click(Sender: TObject);
<B>var</B>
  A, B, C: Integer;
<B>begin</B>
  A := 10;
  B := 0;
  <FONT COLOR="#000080"><I>{generates an exception, which is not handled by us}</I></FONT>
  C := A <B>div</B> B;
  <FONT COLOR="#000080"><I>{we have to use the result, or the optimizer will
  remove the code and the error, too}</I></FONT>
  Caption := IntToStr (C);
<B>end</B>;

<B>procedure</B> TForm1.ButtonRaise1Click(Sender: TObject);
<B>begin</B>
  <B>try</B>
    <FONT COLOR="#000080"><I>{this procedure raises an exception}</I></FONT>
    AddToArray (24);
  <B>except</B>
    <FONT COLOR="#000080"><I>{simply ignores the exception}</I></FONT>
    <B>on</B> EArrayFull <B>do</B>; <FONT COLOR="#000080"><I>{do nothing}</I></FONT>
  <B>end</B>;
<B>end</B>;

<B>procedure</B> TForm1.ButtonRaise2Click(Sender: TObject);
<B>begin</B>
  <FONT COLOR="#000080"><I>{unguarded call}</I></FONT>
  AddToArray (24);
<B>end</B>;

<B>end</B>.</PRE>
<HR>

<A NAME=EXCEPF.DFM><H3>EXCEPF.DFM</H3></A>

<PRE>
<B>object</B> Form1: TForm1
  Left = 166
  Top = 145
  Width = 389
  Height = 216
  ActiveControl = ButtonDivide1
  Caption = <I>'Exceptions test'</I>
  Font.Charset = ANSI_CHARSET
  Font.Color = clBlack
  Font.Height = -12
  Font.Name = <I>'Arial'</I>
  Font.Style = []
  PixelsPerInch = 96
  TextHeight = 15
  <B>object</B> Label1: TLabel
    Left = 37
    Top = 16
    Width = 109
    Height = 15
    Caption = <I>'Handled exceptions'</I>
  <B>end</B>
  <B>object</B> Label2: TLabel
    Left = 213
    Top = 16
    Width = 123
    Height = 15
    Caption = <I>'Unhandled exceptions'</I>
  <B>end</B>
  <B>object</B> ButtonDivide1: TButton
    Left = 40
    Top = 48
    Width = 113
    Height = 49
    Caption = <I>'Divide'</I>
    TabOrder = 0
    OnClick = ButtonDivide1Click
  <B>end</B>
  <B>object</B> ButtonDivide2: TButton
    Left = 224
    Top = 48
    Width = 113
    Height = 49
    Caption = <I>'Divide'</I>
    TabOrder = 1
    OnClick = ButtonDivide2Click
  <B>end</B>
  <B>object</B> ButtonRaise1: TButton
    Left = 40
    Top = 112
    Width = 113
    Height = 49
    Caption = <I>'Raise'</I>
    TabOrder = 2
    OnClick = ButtonRaise1Click
  <B>end</B>
  <B>object</B> ButtonRaise2: TButton
    Left = 224
    Top = 112
    Width = 113
    Height = 49
    Caption = <I>'Raise'</I>
    TabOrder = 3
    OnClick = ButtonRaise2Click
  <B>end</B>
<B>end</B></PRE>
<HR>

<BR><I><CENTER>Copyright Marco Cant&ugrave; 1998</CENTER></I>
</BODY> </HTML>