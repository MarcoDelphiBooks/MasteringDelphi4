<HTML><HEAD>
<TITLE>Project: FONTGRID.DPR</TITLE>
<META NAME="GENERATOR" CONTENT="PasToHTML[Marco Cantù]">
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<CENTER><I>Marco Cant&ugrave; 1998, Mastering Delphi 4</I></CENTER>
<H1><CENTER>Project: FONTGRID.DPR</CENTER></H1><HR>
<H3>Project Structure</H3><UL>
<LI> <A HREF=#FONTGRID.DPR> FONTGRID.DPR</A>
<LI> <A HREF=#FONTGF.PAS> FONTGF.PAS</A>
<LI> <A HREF=#FONTGF.DFM> FONTGF.DFM</A>
</UL>
<HR>
<A NAME=FONTGRID.DPR><H3>FONTGRID.DPR</H3></A>

<PRE>
<B>program</B> Fontgrid;

<B>uses</B>
  Forms,
  FontGF <B>in</B> <I>'FontGF.pas'</I> <FONT COLOR="#000080"><I>{Form1}</I></FONT>;

<FONT COLOR="#000080"><I>{$R *.RES}</I></FONT>

<B>begin</B>
  Application.CreateForm(TForm1, Form1);
  Application.Run;
<B>end</B>.</PRE>
<HR>

<A NAME=FONTGF.PAS><H3>FONTGF.PAS</H3></A>

<PRE>
<B>unit</B> FontGF;

<B>interface</B>

<B>uses</B>
  SysUtils, Windows, Messages, Classes, Graphics, Controls,
  Forms, Dialogs, StdCtrls, Buttons, ExtCtrls, Grids;

<B>type</B>
  TForm1 = <B>class</B>(TForm)
    StringGrid1: TStringGrid;
    <B>procedure</B> FormCreate(Sender: TObject);
    <B>procedure</B> StringGrid1DrawCell(Sender: TObject; Col, Row: Integer;
      Rect: TRect; State: TGridDrawState);
  <B>private</B>
    <FONT COLOR="#000080"><I>{ Private declarations }</I></FONT>
  <B>public</B>
    <FONT COLOR="#000080"><I>{ Public declarations }</I></FONT>
  <B>end</B>;

<B>var</B>
  Form1: TForm1;

<B>implementation</B>

<FONT COLOR="#000080"><I>{$R *.DFM}</I></FONT>

<B>procedure</B> TForm1.FormCreate(Sender: TObject);
<B>var</B>
  I, J: Integer;
<B>begin</B>
  <FONT COLOR="#000080"><I>{the number of columns equals the number of fonts plus
  1 for the first fixed column, which has a size of 20}</I></FONT>
  StringGrid1.ColCount := Screen.Fonts.Count + 1;
  StringGrid1.ColWidths [0] := 50;

  <B>for</B> I := 1 <B>to</B> Screen.Fonts.Count <B>do</B>
  <B>begin</B>
    <FONT COLOR="#000080"><I>// write the name of the font in the first row</I></FONT>
    StringGrid1.Cells [I, 0] := Screen.Fonts.Strings [I-1];

    <FONT COLOR="#000080"><I>{compute maximum required size of column, getting the width
    of the text with the biggest size of the font of the column}</I></FONT>
    StringGrid1.Canvas.Font.Name := StringGrid1.Cells [I, 0];
    StringGrid1.Canvas.Font.Size := 32;
    StringGrid1.ColWidths [I] :=
      StringGrid1.Canvas.TextWidth (<I>'AaBbYyZz'</I>);
  <B>end</B>;

  <FONT COLOR="#000080"><I>// defines the number of columns</I></FONT>
  StringGrid1.RowCount := 26;
  <B>for</B> I := 1 <B>to</B> 25 <B>do</B>
  <B>begin</B>
    <FONT COLOR="#000080"><I>// write the number in the first column</I></FONT>
    StringGrid1.Cells [0, I] := IntToStr (I+7);
    <FONT COLOR="#000080"><I>// set an increasing height for the rows</I></FONT>
    StringGrid1.RowHeights [I] := 15 + I*2;
    <FONT COLOR="#000080"><I>// insert default text in each column</I></FONT>
    <B>for</B> J := 1 <B>to</B> StringGrid1.ColCount <B>do</B>
      StringGrid1.Cells [J, I] := <I>'AaBbYyZz'</I>
  <B>end</B>;
  StringGrid1.RowHeights [0] := 25;
<B>end</B>;

<B>procedure</B> TForm1.StringGrid1DrawCell (Sender: TObject;
  Col, Row: Integer; Rect: TRect; State: TGridDrawState);
<B>begin</B>
  <FONT COLOR="#000080"><I>// select a font, depending on the column</I></FONT>
  <B>if</B> (Col = 0) <B>or</B> (Row = 0) <B>then</B>
    StringGrid1.Canvas.Font.Name := <I>'Arial'</I>
  <B>else</B>
    StringGrid1.Canvas.Font.Name := StringGrid1.Cells [Col, 0];

  <FONT COLOR="#000080"><I>// select the size of the font, depending on the row</I></FONT>
  <B>if</B> Row = 0 <B>then</B>
    StringGrid1.Canvas.Font.Size := 14
  <B>else</B>
    StringGrid1.Canvas.Font.Size := Row + 7;

  <FONT COLOR="#000080"><I>// select the background color</I></FONT>
  <B>if</B> gdSelected <B>in</B> State <B>then</B>
    StringGrid1.Canvas.Brush.Color := clHighlight
  <B>else</B> <B>if</B> gdFixed <B>in</B> State <B>then</B>
    StringGrid1.Canvas.Brush.Color := clBtnFace
  <B>else</B>
    StringGrid1.Canvas.Brush.Color := clWindow;

  <FONT COLOR="#000080"><I>// output the text</I></FONT>
  StringGrid1.Canvas.TextRect (Rect, Rect.Left, Rect.Top,
    StringGrid1.Cells [Col, Row]);

  <FONT COLOR="#000080"><I>// draw the focus</I></FONT>
  <B>if</B> gdFocused <B>in</B> State <B>then</B>
    StringGrid1.Canvas.DrawFocusRect (Rect);
<B>end</B>;

<B>end</B>.</PRE>
<HR>

<A NAME=FONTGF.DFM><H3>FONTGF.DFM</H3></A>

<PRE>
<B>object</B> Form1: TForm1
  Left = 201
  Top = 195
  Width = 611
  Height = 345
  ActiveControl = StringGrid1
  Caption = <I>'Font Grid'</I>
  Color = clBtnFace
  Font.Charset = DEFAULT_CHARSET
  Font.Color = clWindowText
  Font.Height = -13
  Font.Name = <I>'System'</I>
  Font.Style = []
  OldCreateOrder = True
  OnCreate = FormCreate
  PixelsPerInch = 96
  TextHeight = 16
  <B>object</B> StringGrid1: TStringGrid
    Left = 0
    Top = 0
    Width = 603
    Height = 318
    Align = alClient
    ColCount = 20
    DefaultColWidth = 200
    DefaultDrawing = False
    RowCount = 20
    Options = [goFixedVertLine, goFixedHorzLine, goVertLine, goHorzLine, goDrawFocusSelected, goColSizing, goColMoving, goEditing]
    TabOrder = 0
    OnDrawCell = StringGrid1DrawCell
    RowHeights = (
      24
      24
      24
      24
      24
      24
      24
      24
      24
      24
      24
      24
      24
      24
      24
      24
      24
      24
      24
      24)
  <B>end</B>
<B>end</B></PRE>
<HR>

<BR><I><CENTER>Copyright Marco Cant&ugrave; 1998</CENTER></I>
</BODY> </HTML>